name: Build and Release Debian Package

on:
  # Trigger this workflow when you push a tag that starts with 'v', e.g. 'v1.0.0'
  push:
    tags:
      - "v*"

jobs:
  build-deb:
    runs-on: ubuntu-20.04
    
    # Important: explicitly grant write permission for contents (releases) 
    permissions:
      contents: write

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up dpkg-deb
        run: |
          sudo apt-get update
          sudo apt-get install -y dpkg-dev
          sudo dpkg --clear-avail

      - name: Build Debian package
        id: build_deb
        run: |
          # Create staging folder
          mkdir package
          sudo dpkg --clear-avail

          # Copy all packaging content to staging
          chmod +x packaging/usr/local/bin/my_tool
          cp -R packaging/* package/

          # Also copy the Python source into an appropriate location
          mkdir -p package/usr/local/share/mytool
          chmod 755 package/DEBIAN/postinst
          cp -R src/main_tool.py package/usr/local/share/mytool/

          # Build .deb
          dpkg-deb --build package mytool_1.0.0_all.deb

      - name: Create or update GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          # Pass the token this way instead of `GITHUB_TOKEN:` 
          token: ${{ secrets.GITHUB_TOKEN }}

          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Debian artifact to Release
        uses: actions/upload-release-asset@v1
        with:
          # Use the upload_url from the previous step
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: mytool_1.0.0_all.deb
          asset_name: mytool_1.0.0_all.deb
          asset_content_type: application/octet-stream
